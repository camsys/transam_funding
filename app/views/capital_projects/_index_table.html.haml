:ruby
  table_dom_id = SecureRandom.hex

:css
  #capital_projects_table_div .fixed-table-footer {
      border-top: none;
  }

  #capital_projects_table_div .bootstrap-table .fixed-table-footer tbody>tr>td {
      padding: 0 !important;
      border: none;
  }

  .bs-bars.pull-left {
    float: none !important;
    display: inline-block;
    width: 91%;
  }

#projects_table_actions.row
  - if can? :create, CapitalProject
    -#= link_to new_capital_project_path, :class => 'btn btn-default', :style => 'margin-left: 5px;' do
    -#  %i.fa.fa-plus.fa-fw
    -#  = " New Capital Project"
    %input{:type=>"checkbox", :class=>"flyout-checkbox", :id=>"flyout-checkbox"}
    %label{:class=>"flyout-label btn btn-primary btn-md", :for=>"flyout-checkbox"} New Capital Project
    .flyout-content-left
      .flyout-panel
        %header
          %label{:class=>"flyout-label", :for=>"flyout-checkbox"}
            %span New Capital Project
        #flyout-body{:class=>"flyout-body"}
  .navbar-form.pull-right{:style => 'margin-top: 0px;'}
    %button.btn.btn-primary.btn-md.dropdown-toggle{:data => {:toggle => 'dropdown'}, :style => 'vertical-align: top;'}
      %i.fa.fa-file
      = " Export"
      %span.caret
    %ul.dropdown-menu{:role => 'menu', :style => 'padding-top: 0px;'}
      %li{:style => "background-color: #f5f5f5; padding-left: 20px;  border-bottom: 1px solid black;"}
        Export Projects
      -#%li
      -#  = link_to 'CSV', current_url(format: :csv), target: '_blank', title: 'Export all rows and columns to CSV'
      -#%li
      -#  = link_to 'TXT', current_url(format: :txt), target: '_blank', title: 'Export all rows and columns to TXT'
      %li{:style => 'border-bottom: 1px solid black;'}
        = link_to 'XLSX', current_url(format: :xlsx), target: '_blank', title: 'Export all rows and columns to XLSX'
      %li{:style => "background-color: #f5f5f5; padding-left: 20px; padding-right: 20px; border-bottom: 1px solid black; border-top: 1px solid black"}
        Export Activity Line Items
      -#%li
      -#  = link_to 'CSV', current_url(format: :csv), target: '_blank', title: 'Export all rows and columns to CSV'
      -#%li
      -#  = link_to 'TXT', current_url(format: :txt), target: '_blank', title: 'Export all rows and columns to TXT'
      %li
        = link_to 'XLSX', {controller: 'capital_projects', action: 'activity_line_items', format: :xlsx}, target: '_blank', title: 'Export all rows and columns to XLSX'



:ruby
  table_dom_id = SecureRandom.hex
  show_actions ||= 0

= javascript_include_tag  "https://kit.fontawesome.com/#{ENV['FONT_AWESOME']}.js"
.library-table
  %table.elbat{:id => table_dom_id,
  :use => 'true',
  :data => {:use => 'true',
    :table_code => 'projects',
    :side => 'server',
    :current_page => '0',
    :current_page_size => '10',
    :page_sizes => "10,20,50,100",
    :search => 'server',
    :export => "['csv', 'txt', 'excel']",
    :columns => '{"project_number":{"name":"Project ID","type":"drilldown-link"},
                  "organization":{"name":"Organization"},
                  "fiscal_year":{"name":"Year"},
                  "title":{"name":"Title"},
                  "scope":{"name":"Scope"},
                  "project_type":{"name":"Project Type"},
                  "sogr":{"name":"SOGR","type":"checkmark-column"},
                  "shadow":{"name":"Shadow","type":"checkmark-column"},
                  "multi_year":{"name":"Multi-Year","type":"checkmark-column"},
                  "emergency":{"name":"Emergency Project","type":"checkmark-column"},
                  "ali":{"name":"ALI"},
                  "requested":{"name":"Requested"},
                  "allocated":{"name":"Allocated"}}',
    :selected_columns => "project_number,organization,fiscal_year,title,scope,project_type,sogr,shadow,multi_year,emergency,ali,requested,allocated",
    :cookies => 'true',
    :sort => 'server',
    :sort_params => '',
    :url => table_capital_projects_path(:format => :json) }}

:javascript
  window["#{table_dom_id}"].apply_styles = function(){
    $("##{table_dom_id} .checkmark-column .cell-text:contains('true')").each(function(){
      if($(this).children().length === 0) {
        $(this).text("").append($("<i id='checkmark' class='fa fa-check text-default'></i>"));
      }
    $("##{table_dom_id} .checkmark-column .cell-text:contains('false')").hide();
    });
  }







-# #capital_projects_table_div.table-responsive
-#   %table.table.table-condensed.table-hover{:id => table_dom_id, :data => {:toggle => 'table',
-#     :url => capital_projects_path(format: :json),
-#     :card_view => "false",
-#     :pagination => 'true',
-#     :side_pagination => 'server',
-#     :show_pagination_switch => 'false',
-#     :page_number => '1',
-#     :page_list => "5, 10, 20, 50, 100, 200, 10000]",
-#     :page_size => current_user.num_table_rows,
-#     :search => 'false',
-#     :show_columns => 'true',
-#     :toolbar => "#projects_table_actions",
-#     :row_style => 'row_style',
-#     :click_to_select => 'true',
-#     :query_params => "query_params",
-#     :show_export => 'true',
-#     :id_field => 'object_key',
-#     :export_types => "['csv', 'txt', 'excel']",
-#     :cookie => 'true',
-#     :cookie_id_table => "capital_projects_id",
-#     :cookie_expire => "1y",
-#     :single_select => 'true',
-#     :show_footer => 'true'}}
-#     %thead
-#       %tr
-#         - if @organization_list.count > 1
-#           %th.left{data: {field: 'agency', visible: "#{@organization_list.count > 1}"}} Agency
-#         %th.center.nowrap{data: {field: 'fy_year'}} #{get_fy_label}
-#         %th.left.nowrap{data: {field: 'project_number'}} Project
-#         %th.center.nowrap{data: {field: 'scope'}} Scope
-#         %th.center{data: {field: 'is_emergency', formatter: 'raw_boolean_formatter'}} Emgcy
-#         %th.center{data: {field: 'is_sogr', formatter: 'raw_boolean_formatter'}} SOGR
-#         %th.center{data: {field: 'is_notional', formatter: 'raw_boolean_formatter'}} Shadow
-#         %th.center{data: {field: 'is_multi_year', formatter: 'raw_boolean_formatter'}} Multi Year

-#         %th.center{data: {field: 'type'}} Type
-#         %th.left{data: {field: 'title'}} Title
-#         -#%th.center Status
-#         %th{data: {field: 'total_cost', formatter: 'currency_formatter', footer_formatter: 'total_cost_formatter', align: 'right'}} Cost

-#         %th{data: {field: 'state_funds', formatter: 'currency_formatter', footer_formatter: 'total_state_funds_formatter', align: 'right'}} State
-#         %th{data: {field: 'federal_funds', formatter: 'currency_formatter', footer_formatter: 'total_federal_funds_formatter', align: 'right'}} Federal
-#         %th{data: {field: 'local_funds', formatter: 'currency_formatter', footer_formatter: 'total_local_funds_formatter', align: 'right'}} Local
-#         %th{data: {field: 'total_funds', formatter: 'currency_formatter', footer_formatter: 'total_funds_formatter', align: 'right'}} Total

-#         -#%th.center.project-icon-column{data: {field: 'popup_content', formatter: 'popup_formatter'}}
-#         %th.center.project-icon-column{data: {field: 'has_early_replacement_assets', formatter: 'early_replacement_flag_formatter'}}

-# = render 'shared/table_formatters'

-# :javascript
-#   $(document).ready(function() {
-#     $('#' + '#{table_dom_id}').bootstrapTable('resetWidth');
-#   });

-#   var path = '#{capital_project_path("x")}';
-#   function row_style(row, index) {
-#     return {
-#       classes: 'action-path'
-#     };
-#   };

-#   $('#' + '#{table_dom_id}').on('click-row.bs.table', function (e, row, $element) {
-#     var url = path.replace("x", row['object_key']);
-#     document.location.href = url;
-#   }).on('post-body.bs.table', function () {
-#     $('.transam-popover').popover({
-#       trigger: 'hover'
-#     });

-#     $('.transam-tooltip').tooltip();
-#   });

-#   $(window).resize(function() {
-#     $('#' + '#{table_dom_id}').bootstrapTable('resetView');
-#   });

-#   var org_filter = #{@org_filter || []};
-#   var fiscal_year_filter = #{@fiscal_year_filter || []};
-#   var capital_project_flag_filter = #{@capital_project_flag_filter || []};
-#   var capital_project_type_filter = #{@capital_project_type_filter || []};
-#   var asset_subtype_filter = #{@asset_subtype_filter || []};

-#   function query_params(params) {
-#     if(org_filter.length > 0) {
-#       params.org_filter = org_filter;
-#     }

-#     if(fiscal_year_filter.length > 0) {
-#       params.fiscal_year_filter = fiscal_year_filter;
-#     }

-#     if(capital_project_flag_filter.length > 0) {
-#       params.capital_project_flag_filter = capital_project_flag_filter;
-#     }

-#     if(capital_project_type_filter.length > 0) {
-#       params.capital_project_type_filter = capital_project_type_filter;
-#     }

-#     if(asset_subtype_filter.length > 0) {
-#       params.asset_subtype_filter = asset_subtype_filter;
-#     }

-#     return params;
-#   }



-#   var formatMoney = function(n, c, d, t) {
-#     var c = isNaN(c = Math.abs(c)) ? 0 : c,
-#     d = d == undefined ? "." : d,
-#     t = t == undefined ? "," : t,
-#     s = n < 0 ? "-" : "",
-#     i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
-#     j = (j = i.length) > 3 ? j % 3 : 0;
-#     return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
-#   }

-#   function total_state_funds_formatter(value) {
-#     return '#{format_as_currency(@projects.total_state_funds)}';
-#   }
-#   function total_federal_funds_formatter(value) {
-#     return '#{format_as_currency(@projects.total_federal_funds)}';
-#   }
-#   function total_local_funds_formatter(value) {
-#     return '#{format_as_currency(@projects.total_local_funds)}';
-#   }
-#   function total_funds_formatter(value) {
-#     return '#{format_as_currency(@projects.total_funds)}';
-#   }

