= simple_form_for(@funding_template,
:html => {:class => 'form-vertical funding_template_form' },
:wrapper => :vertical_form,
:wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes, :radio_buttons => :vertical_radio_and_checkboxes, :file => :vertical_file_input, :boolean => :vertical_boolean}) do |f|

  = f.association :funding_source, :required => true, :collection => FundingSource.all, :include_blank => true, :label => "Funding Program", :disabled => !@funding_template.new_record?
  = f.input :name, :required => true, :input_html => {:maxlength => 64}
  = f.input :external_id, :label => 'dotGrants ID', :input_html => {:maxlength => 32}
  = f.input :description

  .row
    .col-sm-3
      = f.association :contributor, :collection => FundingOrganizationType.active, :required => true, :disabled => !@funding_template.new_record?
    .col-sm-9
      = f.hidden_field :contributor_organization_ids, :multiple => true
      .form-group.required
        %label.required.control-label
          %abbr{title: 'required'} *
          = " Eligibility Contributor Organization(s)"
          %a.transam-popover{data: {placement: 'top', toggle: 'popover', html: 'true', content: 'Multiple contributors may be selected, but only one contributor organization may be selected when creating a budget.'}, tabindex: '0'}
            %i.fa.fa-info-circle

        #contributor_org_select.input-large
  .row
    .col-sm-3
      = f.association :owner, :collection => FundingOrganizationType.active, :required => true, :disabled => !@funding_template.new_record?
    .col-sm-9
      = f.hidden_field :organization_ids, :multiple => true
      .form-group.required
        %label.required.control-label
          %abbr{title: 'required'} *
          = " Eligibility Owner Organization(s)"
          %a.transam-popover{data: {placement: 'top', toggle: 'popover', html: 'true', content: 'Multiple owners may be selected, but only one owner organization may be selected when creating a budget.'}, tabindex: '0'}
            %i.fa.fa-info-circle
        #owner_org_select.input-large

  .row
    .col-sm-3
      = f.input :recurring, :label => 'multiple years'
    .col-sm-3
      = f.input :create_multiple_agencies, :label => 'multiple agencies'
    .col-sm-3
      = f.input :create_multiple_buckets_for_agency_year, :label => 'multiple times for the same agency/year'
    .col-sm-3
      = f.input :restricted, :label => 'buckets restricted to one agency'


  .row
    .col-sm-6
      = f.input :match_required, :label => 'Pcnt Match', :wrapper => :vertical_append do
        = f.input_field :match_required, :class => 'form-control', :max => 100, :step => 0.001
        %span.input-group-addon
          %i.fa.fa-percent

  = f.association :funding_template_types, :as => :check_boxes, :label => "For"

  = f.button :submit, 'Save', :class => "btn btn-primary", :id => 'funding_template_submit', :disabled => f.object.query_string.blank? && f.object.organizations.count == 0

= render 'funding_templates/form_scripts'

:javascript

  function control_template_booleans(){
    if ($('#funding_template_create_multiple_buckets_for_agency_year').is(':checked')) {
      $('#funding_template_recurring').attr('checked', false);
      $('#funding_template_create_multiple_agencies').attr('checked', false);
      $('#funding_template_recurring').attr("disabled", true);
      $('#funding_template_create_multiple_agencies').attr("disabled", true);
    } else if (parseInt($('#funding_template_owner_id').val()) == parseInt('#{FundingSourceType.find_by(name: "State").id}')) {
      $('#funding_template_create_multiple_agencies').attr('checked', false);
      $('#funding_template_create_multiple_agencies').attr("disabled", true);
    } else{
      $('#funding_template_recurring').removeAttr("disabled");
      $('#funding_template_create_multiple_agencies').removeAttr("disabled");
    };

    if (parseInt($('#funding_template_owner_id').val()) == parseInt('#{FundingSourceType.find_by(name: "Agency").id}')) {
      $('#funding_template_restricted').attr('checked', false);
      $('#funding_template_restricted').attr("disabled", true);
    } else {
      $('#funding_template_restricted').removeAttr("disabled");
    }
  }

  control_template_booleans();

  // check if using query or selecting orgs
  if (parseInt($('#query').val()) > 0) { // if query
    $('#org_select').hide();
  }  else {
    $('#org_select').show();
  }

  $('#query').on('change', function(e) {
    var val = $(this).val();
    if (parseInt(val) > 0) { // if query
      $('#org_select').data().bootstrapTransfer.move_all(true, false); // clear out all selected values
      $('#org_select').hide();
      $('#funding_template_submit').attr('disabled', false);
    }  else {
      $('#org_select').show();
      $('#funding_template_submit').attr('disabled', true);
    }
  });
  
  $('body').on('click', '.selector, .selector-chooseall, .selector-clearall', function() {
    if ($('#selected_owner_orgs option').length > 0 && ($('#selected_contributor_orgs option').length > 0)) {
      $('#funding_template_submit').attr('disabled', false);
    } else {
      $('#funding_template_submit').attr('disabled', true);
    }
  });

  $('#funding_template_create_multiple_buckets_for_agency_year').on('change', function(e) {
    control_template_booleans();
  });
  $('#funding_template_owner_id').on('change', function(e) {
    control_template_booleans();
  });

  // jquery validations
  $('.funding_template_form').validate({
    ignore: '#funding_template_organization_ids, .filter-input, .filtered'
  });

  $( "#funding_template_match_required" ).rules( "add", {
    greaterThan: 0,
    PercentThreeDigits: true
  });

  $.validator.addMethod('greaterThan', function(value, element, params) {
      return this.optional(element) || parseFloat(value) > params;
  }, "Please enter a value greater than {0}.");

  $.validator.addMethod('PercentThreeDigits', function(value, element) {
      return this.optional(element) || /^\d*(\.\d{0,3})?$/.test(value);
  }, "Please enter a correct percent up to three decimal places.");

  $('#funding_template_funding_source_id').change(function(){

    if (funding_template_funding_source_id.value > 0)
    {
      var url = '#{find_match_required_from_funding_source_id_funding_templates_path}';
      $.ajax({
        url: url,
        data: {funding_source_id: funding_template_funding_source_id.value},
        success: function(result){
         funding_template_match_required.value = result;
        },
        error: function (xhr, ajaxOptions, thrownError) {
          alert("We are sorry but something went wrong. " + xhr.status + " " + thrownError);
          }
        });
    };
  });
