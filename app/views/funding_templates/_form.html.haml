= simple_form_for(@funding_template,
:html => {:class => 'form-vertical funding_template_form' },
:wrapper => :vertical_form,
:wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes, :radio_buttons => :vertical_radio_and_checkboxes, :file => :vertical_file_input, :boolean => :vertical_boolean}) do |f|

  = f.association :funding_source, :required => true, :collection => FundingSource.all, :include_blank => true, :label => "Funding Program", :disabled => !@funding_template.new_record?
  //= f.input :funding_source, as: :hidden
  = f.input :name, :required => true, input_html: {:maxlength => 64}
  = f.input :external_id, :label => 'dotGrants ID', input_html: {maxlength: 32}
  = f.input :description
  .col-sm-3
    = f.association :contributor, :collection => FundingOrganizationType.active, :required => true, :disabled => !@funding_template.new_record?
  .row
    .col-sm-12
      .form-group.required
        %label.required.control-label
          %abbr{title: 'required'} *
          = " Eligibility Contributor Organization(s)"
          %a.transam-popover{data: {placement: 'top', toggle: 'popover', html: 'true', content: 'Multiple contributors may be selected, but only one contributor organization may be selected when creating a budget.'}, tabindex: '0'}
            %i.fa.fa-info-circle
        = f.select(:contributor_organization_ids,
                @funding_template.funding_source.organizations.collect {|a| [a.coded_name, a.id]},
                {:include_blank => true},
                {multiple: true})
  
  .col-sm-3
    = f.association :owner, :collection => FundingOrganizationType.active, :required => true, :disabled => !@funding_template.new_record?
  .row
    .col-sm-12
      .form-group.required
        %label.required.control-label
          %abbr{title: 'required'} *
          = " Eligibility Owner Organization(s)"
          %a.transam-popover{data: {placement: 'top', toggle: 'popover', html: 'true', content: 'Multiple owners may be selected, but only one owner organization may be selected when creating a budget.'}, tabindex: '0'}
            %i.fa.fa-info-circle
        = f.select(:organization_ids,
                @funding_template.funding_source.organizations.collect {|a| [a.coded_name, a.id]},
                {:include_blank => true},
                {multiple: true})

  .row
    .col-sm-3
      .form-group.required
        %label.required.control-label
          %abbr{title: 'required'} *
          = "Budget Horizon"
          %a.transam-popover{data: {placement: 'top', toggle: 'popover', html: 'true', content: 'Budgets may be created for more than one year at a time, up to the maximum Funding Horizon.'}, tabindex: '0'}
            %i.fa.fa-info-circle
        = f.input :recurring, collection: [['Annual', false], ['Recurring', true]], required: true, :label => false
      = f.input :restricted, as: :hidden


  .row
    .col-sm-6
      = f.input :match_required, :label => 'Pcnt Match', :wrapper => :vertical_append do
        = f.input_field :match_required, :class => 'form-control', :max => 100, :step => 0.001, :value => @funding_template.funding_source.match_required
        %span.input-group-addon
          %i.fa.fa-percent
  .row
    .col-sm-6
      = f.input :transfer_only, :label => "Transferable Funds"

  = f.association :funding_template_types, :as => :check_boxes, :label => "Eligible Uses"

  = f.button :submit, 'Save', :class => "btn btn-primary", :id => 'funding_template_submit'

= render 'funding_templates/form_scripts'

:javascript

  // jquery validations
  $('.funding_template_form').validate({
    ignore: '#funding_template_organization_ids, .filter-input, .filtered'
  });

  $( "#funding_template_match_required" ).rules( "add", {
    greaterThan: 0,
    PercentThreeDigits: true
  });

  $.validator.addMethod('greaterThan', function(value, element, params) {
      return this.optional(element) || parseFloat(value) > params;
  }, "Please enter a value greater than {0}.");

  $.validator.addMethod('PercentThreeDigits', function(value, element) {
      return this.optional(element) || /^\d*(\.\d{0,3})?$/.test(value);
  }, "Please enter a correct percent up to three decimal places.");

  $('#funding_template_funding_source_id').change(function(){

    if (funding_template_funding_source_id.value > 0)
    {
      var url = '#{find_match_required_from_funding_source_id_funding_templates_path}';
      $.ajax({
        url: url,
        data: {funding_source_id: funding_template_funding_source_id.value},
        success: function(result){
         funding_template_match_required.value = result;
        },
        error: function (xhr, ajaxOptions, thrownError) {
          alert("We are sorry but something went wrong. " + xhr.status + " " + thrownError);
          }
        });
    };
  });
