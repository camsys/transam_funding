:ruby
  table_dom_id = SecureRandom.hex
  popup ||= '0'

:css
  .modal-lg {
    width: 80%;
  }
.table-responsive
  %table.table.table-condensed.table-hover{:id => table_dom_id, :data => {:toggle => 'table',
    :url => assets_capital_project_activity_line_item_path(ali.capital_project, ali, {format: :json}),
    :card_view => "false",
    :pagination => 'true',
    :side_pagination => 'server',
    :show_pagination_switch => 'true',
    :page_number => '1',
    :page_list => "[10, 20, 50, 100, 200]",
    :page_size => current_user.num_table_rows,
    :search => 'false',
    :striped => 'true',
    :single_select => 'false',
    :show_columns => 'false',
    :toolbar => "#asset-actions",
    :row_style => 'row_style',
    :click_to_select => 'false',
    :show_export => 'false',
    :id_field => 'object_key',
    :state_save => 'true',
    :state_save_id_table => "assets_scheduler_notional_id",
    :state_save_expire => "1y",
    :classes => 'table-no-bordered'}}
    %thead
      %tr
        %th.left{data: {width: 100, field: 'replace_with_subtype', formatter: 'replace_with_subtype_formatter'}} Asset Subtype
        %th.center{data: {field: 'replace_with_fuel_type', formatter: 'replace_with_fuel_type_formatter'}} Fuel
        %th.left{data: {width: 400, field: 'description', formatter: 'description_formatter'}} Description

        %th.center{data: {field: 'min_service_life', formatter: 'integer_formatter'}} Age

        %th.center{data: {formatter: 'ali_fiscal_year_formatter'}} Policy FY
        %th.right{data: {field: 'estimated_cost', formatter: 'currency_formatter'}} Est. Cost
        - if popup == '1'
          %th{data: {formatter: 'popup_formatter_for_date_name'}}

    %tfoot
      %tr
        %td{:colspan => 5}= "Totals for #{ali.assets.count} assets"
        %td.right= format_as_currency(ali.estimated_cost)
        - if popup == '1'
          %td

= render 'shared/table_formatters'

:javascript

  var is_rehabilitation;
  if ("#{ali.rehabilitation_ali?}" == "true") {
    is_rehabilitation = true;
  } else {
    is_rehabilitation = false;
  }

  $(document).ready(function() {

    $("##{table_dom_id}").bootstrapTable();

    $('#' + '#{table_dom_id}').on('post-body.bs.table', function () {
      $('.transam-popover').popover({
        trigger: 'hover',
        container: 'body',
        placement: 'left',
        content: function(){
          var div_id =  $(this).attr('id');
          return details_in_popup($(this).attr('href'), div_id);
        }
      });
    });

  });

  function details_in_popup(link, div_id){
    $.ajax({
      url: "#{get_asset_summary_capital_project_activity_line_item_path(ali.capital_project, ali)}",
      type: 'GET',
      dataType: 'json',
      data: { asset_object_key : div_id },
      complete: function(response, status) {
          $('#popup-'+div_id).html(response.responseText);
      }
    });
    return '<div id="popup-'+ div_id +'">Loading...</div>';
  }

  var formatMoney = function(n, c, d, t) {
    var c = isNaN(c = Math.abs(c)) ? 0 : c,
    d = d == undefined ? "." : d,
    t = t == undefined ? "," : t,
    s = n < 0 ? "-" : "",
    i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
    j = (j = i.length) > 3 ? j % 3 : 0;
    return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
  }

  //TODO Delete this once I know this removed duplication is not necessary
  // function description_formatter(value, data) {
  //   if (value) {
  //     if (is_rehabilitation) {
  //       str = "Rehabilitation";
  //     } else {
  //       str = "Replacement";
  //     }
  //     return str + " for " + data.asset_subtype_id + " " + data.fuel_type + " " + value + " replaced in " + data.scheduled_replacement_year;
  //   } else {
  //     return "";
  //   }
  // };

  //TODO Delete this once I know this removed duplication is not necessary
  // function integer_formatter(value) {
  //   if (value) {
  //     return format("###,##0.", value);
  //   } else {
  //     return value;
  //   }
  // };

  //TODO Delete this once I know this removed duplication is not necessary
  //function ali_fiscal_year_formatter(value) {
  //  return "#{format_as_fiscal_year(ali.fy_year)}";
  //};

  //TODO Delete this once I know this removed duplication is not necessary
  // function currency_formatter(value) {
  //   return "$" + formatMoney(value);
  // }

  //TODO Delete this once I know this removed duplication is not necessary
  // function popup_formatter_for_date_name(value, data) {
  //   return '<a class="transam-popover" id="' + data.object_key + '" data-container="body" data-content="" data-html="true" data-placement="left" data-title="' + data.name + '" data-toggle="popover" tabindex="0"><i class="fa fa-info-circle fa-1-25x text-info"></i></a>';
  // }

  //TODO Delete this once I know this removed duplication is not necessary
  // function replace_with_subtype_formatter(value, data) {
  //   if (value) {
  //     return value;
  //   } else if (data) {
  //     return data.asset_subtype_id
  //   } else {
  //     return "";
  //   }
  // }

  //TODO Delete this once I know this removed duplication is not necessary
  // function replace_with_fuel_type_formatter(value, data) {
  //   if (value) {
  //     return value;
  //   } else if (data) {
  //     return data.fuel_type
  //   } else {
  //     return "";
  //   }
  // }



